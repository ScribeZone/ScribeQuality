#=UMLStarUML
# From StarUML user manual http://staruml.sourceforge.net/docs/user-guide(en)/ch09.html

$StarUML1:
  AssociationEnds within an Association must have unique names. --- Association
$StarUML2:
  Two or more Aggregations or Composite AssociationEnds cannot exist within an Association. --- Association
$StarUML3:
  Parameters must have unique names. --- BehavioralFeature
$StarUML4:
  Attributes of the same name cannot exist within a Classifier. --- Classifier
$StarUML5:
  AssociationEnds on the other side must have unique names. --- Classifier
$StarUML6:
  An Attribute cannot have the same name as the Association on the other side, or as elements included in Classifier. --- Classifier
$StarUML7:
  AssociationEnd on the other side cannot have the same name as elements included in Classifier or its Attribute name. --- Classifier
$StarUML8:
  Root element cannot have elements that are more generalized than itself. --- GeneralizableElement
$StarUML9:
  Leaf element cannot have elements that are more specialized than itself. --- GeneralizableElement
$StarUML10:
  Looped inheritance structure is not allowed. --- GeneralizableElement
$StarUML11:
  All features of interfaces must be public. --- Interface
$StarUML12:
  ComponentInstance must accurately assign a component as its origin. --- ComponentInstance
$StarUML13:
  NodeInstance must accurately assign a node as its origin. --- NodeInstance
$StarUML14:
  AssociationEndRole must be connected with ClassifierRole. --- AssociationEndRole
$StarUML15:
  ClassifierRole cannot have its own features. --- ClassifierRole
$StarUML16:
  ClassifierRole cannot become the ClassifierRole for another ClassifierRole. --- ClassifierRole
$StarUML17:
  Sender and receiver of a message must participate in the collaboration that constitutes the interaction context. --- Message
$StarUML18:
  Actor can only have associations that are connected to UseCase, Class or Subsystem. --- Actor
$StarUML19:
  CompositeState can have a maximum of one initial state only. --- CompositeState
$StarUML20:
  CompositeState can have a maximum of one deep history only. --- CompositeState
$StarUML21:
  CompositeState can have a maximum of one shallow history only. --- CompositeState
$StarUML22:
  Concurrent composite state must contain a minimum of two composite states. --- CompositeState
$StarUML23:
  Concurrent state can only have composite state as its sub state. --- CompositeState
$StarUML24:
  Final state cannot have outgoing transition. --- FinalState
$StarUML25:
  Initial state can have a maximum of one outgoing transition and cannot have incoming transition. --- Pseudostate
$StarUML26:
  History state can have a maximum of one outgoing transition. --- Pseudostate
$StarUML27:
  Junction vertex must have a minimum of one incoming transition and one outgoing transition each. --- Pseudostate
$StarUML28:
  Choice vertex must have a minimum of one incoming transition and one outgoing transition each. --- Pseudostate
$StarUML29:
  StateMachine can be integrated either with Classifier or with BehavioralFeature. --- StateMachine
$StarUML30:
  Top state must always be composite state. --- StateMachine
$StarUML31:
  No state can contain top state. --- StateMachine
$StarUML32:
  Top state cannot have outgoing transition. --- StateMachine
$StarUML33:
  SubmachineState cannot have concurrency. --- SubmachineState
$StarUML34:
  Transition that points to Pseudostate cannot have Trigger. --- Transition
$StarUML35:
  ActivityGraph can express dynamic behavior of Package, Classifier or BehavioralFeature. --- ActivityGraph
$StarUML36:
  ActionState cannot have internal transition, exit action or do activity. --- ActionState
$StarUML37:
  Outgoing transition of ActionState cannot have trigger event. --- ActionState
$StarUML38:
  SubactivityState must have connection to ActivityGraph. --- SubactivityState


  
  
