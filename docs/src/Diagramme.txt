#= Diagramme

$NomDiagramme:
  Le nom des diagrammes doit reflêter ce qu'ils modélisent et peuvent donc utilement faire référence à un modèle, à un artéfact, etc. Le type de diagramme (cf $TypeDeDiagramme) peut également être utilement inséré dans ce titre.
  Commentaire: Le type de diagramme est peut généralement être aisement inféré en regardant le diagramme, mais si le nom du diagramme est utilisé comme titre de figure et que ce dernier est dans une liste de figure, il est intéressant de disposer de cette information. Le modèle ou artéfact auquel fait référence le diagramme est parfois facile a inférer via le contexte dans lequel le diagramme est disposé, mais hors de ce contexte cette information est perdue et il est donc essentiel d'indiquer "à quoi" correspond le diagramme.

$TitreDiagramme:
  (cf $NomDiagramme) TODO: to be removed
  

$Densite:
  La densite des éléments dans la diagramme est soit trop importante soit insuffisante et le diagramme pourrait utilement être compacté ou au contraire étendu.
  
$Disposition:
  La disposition spatiale des différents éléments graphiques dans le diagramme n'est pas conventionelle, nuit à la lisibilité du diagramme et/ou devrait être améliorée ou optimisée.
  
$Couleurs:
  L'utilisation des couleurs n'est pas optimale et pourrait être améliorée soit en diminuant, soit en augmentant le nombre des couleurs, soit en rendant explicites leur signification dans le diagramme par exemple via une note.
  
$Chevauchements:
  De nombreux chevauchements d'éléments graphiques rendent la lecture du diagramme difficile.

$Surcharge:
  Le diagramme comporte trop d'éléments graphiques et/ou textuels.
  
$ContenuPauvre:
  Le contenu du diagramme est trop pauvre pour que ce dernier soit réellement pertinent. Soit le diagramme manque de détails soit l'existence du diagramme ou plus simplement son indroduction dans un document pourrait être mise en cause ; c'est le cas si l'information contenue dans le diagramme peut être dérivée à partir d'autres éléments déjà présents dans le document et d'une certaine manière "n'apporte rien".

$ContenuHeterogene:
  Le contenu du diagramme est hétérogène et il n'est pas facile de comprendre quelle est la cohérence entre les différents éléments présentés.
  Commentaire: Dans le cas de modèle non triviaux, un même modèle peut comporter trop d'élément pour étre représenté graphiquement en un seul diagramme est il est donc souhaitable de fournir plusieurs vues sur le modèles sous la forme de différents diagrammes. Chaque vue doit être consistente et correspondre à une intention particulière. La répartition des éléments dans les différents diagrammes doivent pouvoir être justifié.
  Exemple: Si un modèle de cas d'utilisation est complexe, différents diagrammes de cas d'utilisation doivent certainement être créés. La manière de regrouper les différents cas d'utilisation en diagrammes doit pouvoir être justifié. 

$TypeDeDiagramme:
  Le type de diagramme n'est pas explicite. 
  Commentaire: On peut par exemple considérer les types de diagrammes suivants: 
  DiagCU     = Diagramme de Cas d'Utilisation
  DiagDep    = Diagramme de Déploiement
  DiagCls    = Diagramme de Classes
  DiagObj    = Diagramme d'Objets
  DiagSeq    = Diagramme de Séquences
  DiagSeqExt = Diagramme de Séquences Externe
  DiagSeqInt = Diagramme de Séquence Interne
  DiagComInt = Diagramme de Communication Interne
  DiagEtat   = Diagramme d'Etat
  DiagAct    = Diagramme d'Activité  
  
